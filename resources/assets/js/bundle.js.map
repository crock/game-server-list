{"version":3,"sources":["clipboard.js","colorfinder.js","other.js","tagging.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACftBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["window.Clipboard = require('clipboard');\n\nvar clipboard = new Clipboard('.rm');\n\n\tclipboard.on('success', function(e) {\n\tconsole.info('Action:', e.action);\n\tconsole.info('Text:', e.text);\n\tconsole.info('Trigger:', e.trigger);\n\n\te.clearSelection();\n});\n\nclipboard.on('error', function(e) {\n\tconsole.error('Action:', e.action);\n\tconsole.error('Trigger:', e.trigger);\n});","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/color-finder/index.html\n//\n// Detection of the most prominent color in an image\n// version 1.1.1\n\nfunction ColorFinder(colorFactorCallback) {\n  this.callback = colorFactorCallback;\n  this.getMostProminentColor = function(imgEl) {\n    var rgb = null;\n    if (!this.callback) this.callback = function() { return 1; };\n    var data = this.getImageData(imgEl);\n    rgb = this.getMostProminentRGBImpl(data, 6, rgb, this.callback);\n    rgb = this.getMostProminentRGBImpl(data, 4, rgb, this.callback);\n    rgb = this.getMostProminentRGBImpl(data, 2, rgb, this.callback);\n    rgb = this.getMostProminentRGBImpl(data, 0, rgb, this.callback);\n    return rgb;\n  };\n\n  this.getImageData = function(imgEl, degrade, rgbMatch, colorFactorCallback) {\n    \n    var rgb,\n        canvas = document.createElement('canvas'),\n        context = canvas.getContext && canvas.getContext('2d'),\n        data, width, height, key,\n        i = -4,\n        db={},\n        length,r,g,b,\n        count = 0;\n    \n    if (!context) {\n      return defaultRGB;\n    }\n    \n    height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\n    width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\n    \n    context.drawImage(imgEl, 0, 0);\n    \n    try {\n      data = context.getImageData(0, 0, width, height);\n    } catch(e) {\n      /* security error, img on diff domain */\n      return null;\n    }\n\n    length = data.data.length;\n    \n    var factor = Math.max(1,Math.round(length/5000));\n    var result = {};\n    \n    while ( (i += 4*factor) < length ) {\n      if (data.data[i+3]>32) {\n        key = (data.data[i]>>degrade) + \",\" + (data.data[i+1]>>degrade) + \",\" + (data.data[i+2]>>degrade);\n        if (!result.hasOwnProperty(key)) {\n          rgb = {r:data.data[i], g:data.data[i+1], b:data.data[i+2],count:1};\n          rgb.weight = this.callback(rgb.r, rgb.g, rgb.b);\n          if (rgb.weight<=0) rgb.weight = 1e-10;\n          result[key]=rgb;\n        } else {\n          rgb=result[key];\n          rgb.count++;\n        }\n      }\n    }\n\n    return result;\n\n  };\n  \n  this.getMostProminentRGBImpl = function(pixels, degrade, rgbMatch, colorFactorCallback) {\n    \n    var rgb = {r:0,g:0,b:0,count:0,d:degrade},\n        db={},\n        pixel,pixelKey,pixelGroupKey,\n        length,r,g,b,\n        count = 0;\n    \n    \n    for (pixelKey in pixels) {\n      pixel = pixels[pixelKey];\n      totalWeight = pixel.weight * pixel.count;\n      ++count;\n      if (this.doesRgbMatch(rgbMatch, pixel.r, pixel.g, pixel.b)) {\n        pixelGroupKey = (pixel.r>>degrade) + \",\" + (pixel.g>>degrade) + \",\" + (pixel.b>>degrade);\n        if (db.hasOwnProperty(pixelGroupKey))\n          db[pixelGroupKey]+=totalWeight;\n        else\n          db[pixelGroupKey]=totalWeight;\n      }\n    }\n    \n    for (i in db) {\n      data = i.split(\",\");\n      r = data[0];\n      g = data[1];\n      b = data[2];\n      count = db[i];\n      \n      if (count>rgb.count) {\n        rgb.count = count;\n        data = i.split(\",\");\n        rgb.r = r;\n        rgb.g = g;\n        rgb.b = b;\n      }\n    }\n    \n    return rgb;\n    \n  };\n\n  this.doesRgbMatch = function(rgb,r,g,b) {\n    if (rgb==null) return true;\n    r = r >> rgb.d;\n    g = g >> rgb.d;\n    b = b >> rgb.d;\n    return rgb.r == r && rgb.g == g && rgb.b == b;\n  }\n\n}\n","window.$ = window.jQuery = require('jquery');\nvar bootstrap = require('bootstrap-sass');\n\n// Disables Votifier input fields if user does not enable Votifier.\n$(\"#votifier\").on(\"click\", function() {\n    var i = 0;\n    var v = true;\n    $('#add-server fieldset').prop('disabled', function(i, v) { return !v; });\n});\n\nfunction collapsible(zap) {\n    if (document.getElementById) {\n        var abra = document.getElementById(zap).style;\n        if (abra.display == \"block\") {\n            abra.display = \"none\";\n        } else {\n            abra.display = \"block\";\n        }\n        return false;\n    } else {\n        return true;\n    }\n}","require('selectize');\n\nif (document.getElementById(\"tabs\")) {\n    $('#tags').selectize({\n        delimiter: ',',\n        persist: false,\n        valueField: 'tag',\n        labelField: 'tag',\n        searchField: 'tag',\n        options: tags,\n        create: function(input) {\n            return {\n                tag: input\n            }\n        }\n    });\n}","import Vue from 'vue'\nimport VueResource from 'vue-resource'\n\nVue.use(VueResource)\n\nVue.component('server', require('../components/Server.vue'))\n\nvar app = new Vue({\n  el: '#app',\n  data: {\n\t  servers: new Array(),\n\t  error: false,\n\t  patt: /\\/server\\/[0-9]+/\n  },\n  ready: function () {\n\t// GET /someUrl\n\tthis.$http.get('/server/stats/active').then(response => {\n\n\t\t// get body data\n\t\tthis.servers = response.body;\n\n\t}, response => {\n\t\t// error callback\n\t\tthis.error = False\n\t});\n\t\t\n   },\n})"]}